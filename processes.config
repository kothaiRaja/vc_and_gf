process {
    executor = 'local'        
    memory = '8 GB'           
    cpus = 4                  
    time = '4h' 


	// Concatenate FASTQ files (CAT_FASTQ)
	withName: CONCAT_FASTQ {
		cpus = 2                    
		memory = '2 GB'             
		time = '1h'                 
		errorStrategy = 'retry'     
		maxRetries = 1              
	}

	// FASTQC for raw reads
	withName: FASTQC_RAW {
		cpus = 2                    
		memory = '4 GB'             
		time = '2h'                 
		errorStrategy = 'retry'     
		maxRetries = 2              
	}

	// fastp for read trimming
	withName: TRIM_READS {
		cpus = 4                    
		memory = '8 GB'             
		time = '3h'                 
		errorStrategy = 'retry'     
		maxRetries = 2              
	}

    // STAR Alignment for variant calling
    withName: STAR_ALIGNMENT {
        cpus = 8                        
        memory = '32 GB'                 
        time = '4h'                      
        errorStrategy = 'retry'          
        maxRetries = 2                   
    }

    // STAR Alignment for Fusion Detection
    withName: STAR_ALIGN_FUSION {
        cpus = 8                        
        memory = '32 GB'                 
        time = '4h'                      
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Samtools Sort and Index
    withName: SAMTOOLS_SORT_INDEX {
        cpus = 8                         
        memory = '16 GB'                 
        time = '2h'                      
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Samtools Filter Orphans
    withName: SAMTOOLS_FILTER_ORPHANS {
        cpus = 4                         
        memory = '8 GB'
        time = '1h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Samtools Flagstat
    withName: SAMTOOLS_FLAGSTAT {
        cpus = 2
        memory = '4 GB'                  
        time = '30m'
    }

    // Mark Duplicates (GATK)
    withName: GATK_MARK_DUPLICATES {
        cpus = 8                         
        memory = '16 GB'                 
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Split N CIGAR Reads (GATK)
    withName: SPLIT_NCIGAR_READS {
        cpus = 8
        memory = '16 GB'                 
        time = '3h'                      
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // SAMTOOLS CALMD
    withName: SAMTOOLS_CALMD {
        cpus = 8
        memory = '16 GB'                 
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Base Quality Score Recalibration (GATK)
    withName: GATK_RECALIBRATION {
        cpus = 8
        memory = '24 GB'                 
        time = '4h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Convert BED to Interval List
    withName: BED_TO_INTERVAL_LIST {
        cpus = 2
        memory = '4 GB'
        time = '30m'
    }

    // Scatter Interval List
    withName: SCATTER_INTERVAL_LIST {
        cpus = 2
        memory = '4 GB'
        time = '30m'
    }

    // Haplotype Caller (GATK)
    withName: GATK_HAPLOTYPE_CALLER {
        cpus = 8  
		memory = '32 GB'
		time = '6h'
        errorStrategy = 'retry'
        maxRetries = 3                   
    }

    // Variant Filtering (GATK)
    withName: GATK_VARIANT_FILTER {
        cpus = 8
        memory = '16 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Annotate Variants (SnpEff)
    withName: ANNOTATE_VARIANTS {
        cpus = 8
        memory = '24 GB'                 
        time = '3h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    // Fusion Detection (ARRIBA)
    withName: ARRIBA {
        cpus = 8                        
        memory = '32 GB'                 
        time = '4h'                      
        errorStrategy = 'retry'
        maxRetries = 2
    }
}
