// Process Configurations
process {
    executor = 'local'
    memory = '8 GB'
    cpus = 4
    time = '4h'

    withName: CONCAT_FASTQ {
        cpus = 2
        memory = '2 GB'
        time = '1h'
        errorStrategy = 'retry'
        maxRetries = 1
    }

    withName: FASTQC_RAW {
        cpus = 2
        memory = '4 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: TRIM_READS {
        cpus = 4
        memory = '8 GB'
        time = '3h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: STAR_ALIGNMENT {
        cpus = 8
        memory = '32 GB'
        time = '4h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: SAMTOOLS_SORT_INDEX {
        cpus = 8
        memory = '16 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: SAMTOOLS_FILTER_ORPHANS {
        cpus = 4
        memory = '8 GB'
        time = '1h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: SAMTOOLS_FLAGSTAT {
        cpus = 2
        memory = '4 GB'
        time = '30m'
    }

    withName: GATK_MARK_DUPLICATES {
        cpus = 8
        memory = '16 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: SPLIT_NCIGAR_READS {
        cpus = 8
        memory = '16 GB'
        time = '3h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: SAMTOOLS_CALMD {
        cpus = 8
        memory = '16 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: GATK_RECALIBRATION {
        cpus = 8
        memory = '24 GB'
        time = '4h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: BED_TO_INTERVAL_LIST {
        cpus = 2
        memory = '4 GB'
        time = '30m'
    }

    withName: SCATTER_INTERVAL_LIST {
        cpus = 2
        memory = '4 GB'
        time = '30m'
    }

    withName: GATK_HAPLOTYPE_CALLER {
        cpus = 8
        memory = '32 GB'
        time = '6h'
        errorStrategy = 'retry'
        maxRetries = 3
    }

    withName: GATK_VARIANT_FILTER {
        cpus = 8
        memory = '16 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: ANNOTATE_VARIANTS {
        cpus = 8
        memory = '24 GB'
        time = '3h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: BCFTOOLS_STATS {
        cpus = 4
        memory = '8 GB'
        time = '1h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: BCFTOOLS_QUERY {
        cpus = 4
        memory = '8 GB'
        time = '1h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: ANNOTATE_INDIVIDUAL_VARIANTS {
        cpus = 8
        memory = '24 GB'
        time = '3h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: ANNOTATE_INDIVIDUAL_VARIANTS_VEP {
        cpus = 8
        memory = '24 GB'
        time = '3h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: EXTRACT_individual_VCF {
        cpus = 4
        memory = '8 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }
	
	withName: MULTIQC_REPORT {
        cpus = 4
        memory = '8 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }
	
	withName: STAR_ALIGN_FUSION {
        cpus = 8
        memory = '32 GB'
        time = '4h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: ARRIBA {
        cpus = 8
        memory = '32 GB'
        time = '4h'
        errorStrategy = 'retry'
        maxRetries = 2
    }

    withName: ARRIBA_VISUALIZATION {
        cpus = 4
        memory = '16 GB'
        time = '2h'
        errorStrategy = 'retry'
        maxRetries = 2
    }
} 
